name: Build image
env:
    DEPLOY_PATH: ~/home/ec2-user/appyear
on: 
    push:
        branches:
            - main

jobs:
    # build:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Checkout 
    #           uses: actions/checkout@v2
    #         - name: Setup buildx
    #           uses: docker/setup-buildx-action@v1

    #         - name: Login to DockerHub
    #           uses: docker/login-action@v1
    #           with:
    #               username: ${{ secrets.DOCKER_USERNAME }}
    #               password: ${{ secrets.DOCKER_PASSWORD }}
            
    #         - name: Build and push
    #           uses: docker/build-push-action@v2
    #           with:
    #               context: .
    #               file: ./Dockerfile
    #               push: true
    #               tags: ${{ secrets.DOCKER_USERNAME }}/appyear:latest
    #               platforms: linux/arm64,linux/amd64
    deploy: 
        runs-on: ubuntu-latest
        # needs: build
        steps:
            - name: Set up SSH
              uses: webfactory/ssh-agent@v0.5.3
              with:
                ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
            - name: Verify SSH key is added
              run: ssh-add -l
              
            - name: Add remote host to known hosts
              run: ssh-keyscan -H 13.237.137.147 >> ~/.ssh/known_hosts

            - name: Docker login
              run: ssh -o StrictHostKeyChecking=no ${{secrets.HOST_IP}} 'echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ghcr.io -u ${{ secrets.DOCKER_USERNAME }} --password-stdin'
              
            - name: Build Docker compose
              run: ssh -o StrictHostKeyChecking=no ${{secrets.HOST_IP}} 'cd ${{ env.DEPLOY_PATH }} && sudo docker-compose pull'
            
            - name: Run Docker compose
              run: ssh -o StrictHostKeyChecking=no ${{secrets.HOST_IP}} 'cd ${{ env.DEPLOY_PATH }} && sudo docker-compose  up -d'
                  
            - name: clear docker image
              run: ssh -o StrictHostKeyChecking=no ${{secrets.HOST_IP}} 'cd ${{ env.DEPLOY_PATH }} && sudo docker image prune -f'
            